version: '3'
services:
#postgres
  postgres:
    image: "postgres"
    container_name: api-go-gin_postgres
    environment:
      - POSTGRES_USER=foobar
      - POSTGRES_PASSWORD=foobar
      - POSTGRES_DB=foobar
    ports:
      - "5432:5432"
    networks:
      backend:
        ipv4_address: 172.33.0.2
    volumes:
      - ./postgres-data:/var/lib/postgresql/data  
#pgadmin
  pgadmin-compose:
    image: dpage/pgadmin4
    container_name: api-go-gin_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@foobar.com"
      PGADMIN_DEFAULT_PASSWORD: "123456"
    ports:
      - "54321:80"
    networks:
      backend:
        ipv4_address: 172.33.0.3
    volumes:
       - ./configs_pgadmin/servers.json:/pgadmin4/servers.json
       - ./configs_pgadmin/pgpass:/pgpass
    depends_on:
      - postgres
#go-app
  app:
    build:
      context: .
      dockerfile: golang.Dockerfile
    image: api-go-gin
    container_name: api-go-gin_app
    restart: unless-stopped
    tty: true
    ports:
      - "9000"
    networks:
      backend:
        ipv4_address: 172.33.0.4
    depends_on:
      - postgres    

networks:
  backend:
    driver: bridge
    ipam:
     config:
       - subnet: 172.33.0.0/24
         gateway: 172.33.0.1
